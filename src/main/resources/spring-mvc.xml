<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:cache="http://www.springframework.org/schema/cache" 
	xsi:schemaLocation="http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
						http://www.springframework.org/schema/aop
						http://www.springframework.org/schema/aop/spring-aop.xsd
                        http://www.springframework.org/schema/cache
                        http://www.springframework.org/schema/cache/spring-cache-3.2.xsd
						http://www.springframework.org/schema/mvc
						http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
						http://www.springframework.org/schema/context
						http://www.springframework.org/schema/context/spring-context-3.2.xsd">
						
	<!-- 属性文件读入 -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:kensite.properties</value>
			</list>
		</property>
	</bean>
						
	<!-- 它背后注册了很多用于解析注解的处理器,其中就包括<context:annotation-config/>配置的注解所使用的处理器 -->
	<!-- 所以配置了<context:component-scan base-package="">之后,便无需再配置<context:annotation-config> -->
	<context:component-scan base-package="com.seeyoui.kensite,org.activiti.rest.editor">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service" />
	</context:component-scan>

	<!-- 配置SpringMVC的视图解析器 -->
	<!-- 其viewClass属性的默认值就是org.springframework.web.servlet.view.JstlView -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="${web.view.prefix}"/>
		<property name="suffix" value="${web.view.suffix}"/>
	</bean>

	<!-- 默认访问跳转到登录页面(即定义无需Controller的url<->view直接映射) -->
	<mvc:view-controller path="/" view-name="forward:/login.jsp"/>

	<!-- 由于web.xml中设置是：由SpringMVC拦截所有请求,于是在读取静态资源文件的时候就会受到影响(说白了就是读不到) -->
	<!-- 经过下面的配置，该标签的作用就是：所有页面中引用"/js/**"的资源，都会从"/resources/js/"里面进行查找 -->
	<!-- 我们可以访问http://IP:8080/xxx/js/my.css和http://IP:8080/xxx/resources/js/my.css对比出来 -->
	<mvc:resources mapping="/act/**" location="/act/"/>
	<mvc:resources mapping="/assets/**" location="/assets/"/>
	<mvc:resources mapping="/script/**" location="/script/"/>
	<mvc:resources mapping="/static/**" location="/static/"/>
	<mvc:resources mapping="/upload/**" location="/upload/"/>
	<mvc:resources mapping="/WEB-INF/**" location="/WEB-INF/"/>
	<!-- 拦截器配置 -->
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<mvc:exclude-mapping path="/assets/**"/>
			<mvc:exclude-mapping path="/script/**"/>
			<mvc:exclude-mapping path="/static/**"/>
			<mvc:exclude-mapping path="/upload/**"/>
			<mvc:exclude-mapping path="/sys/**"/>
			<bean class="com.seeyoui.kensite.common.interceptor.AuthorityInterceptor" />
		</mvc:interceptor>
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<mvc:exclude-mapping path="/assets/**"/>
			<mvc:exclude-mapping path="/script/**"/>
			<mvc:exclude-mapping path="/static/**"/>
			<mvc:exclude-mapping path="/upload/**"/>
			<mvc:exclude-mapping path="/act/**"/>
			<mvc:exclude-mapping path="/sys/**"/>
			<mvc:exclude-mapping path="/information/**"/>
			<bean class="com.seeyoui.kensite.common.interceptor.LogInterceptor" />
		</mvc:interceptor>
	</mvc:interceptors>
</beans>